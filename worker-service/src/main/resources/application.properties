spring.application.name = worker-service
server.port = 8081

#
# Datasource Properties
#
spring.datasource.url = jdbc:mysql://localhost:3306/textify?useSSL=false&serverTimeZone=UTC
spring.datasource.username = root
spring.datasource.password = Admin123
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#
# JPA Properties
#
spring.jpa.hibernate.ddl-auto = update
spring.jpa.show-sql = true
spring.jpa.properties.hibernate.format_sql = true
spring.jpa.properties.hibernate.use_sql_comments = true

#
# Google Cloud Config
#
spring.cloud.gcp.project-id = textify-466423
# Ensure this path is correct and the file exists and is accessible by your application
spring.cloud.gcp.credentials.location = file:/Users/meghagaonkar/Downloads/textify-466423-898096076927.json
spring.cloud.gcp.storage.bucket-name.raw-uploads = textify-raw-files
spring.cloud.gcp.storage.bucket-name.processed-files = textify-processed-texts

#
# PubSub Properties
#
# This is the name of the subscription your worker service will listen to.
# Ensure this subscription exists in your 'textify-466423' Google Cloud project
# and is linked to the topic your api-service publishes to.
# spring.cloud.stream.gcp.pubsub.binder.project-id = textify-466423
# spring.cloud.stream.bindings.pubsubInputChannel.destination = textify-processing-topic
# spring.cloud.stream.bindings.pubsubInputChannel.group = textify-processing-subscription
# REMOVED: spring.cloud.gcp.pubsub.pull-endpoint = localhost:8081
# The pull-endpoint is NOT needed for connecting to the actual Google Cloud Pub/Sub service.
# It's only used for emulators (e.g., spring.cloud.gcp.pubsub.emulator-host=localhost:8085).
spring.cloud.gcp.pubsub.subscriber.max-messages = 10 # This is a valid property for pull batch size

#
# Tesseract OCR Configuration
#
tesseract.language = eng
tesseract.data-path = /opt/homebrew/share/tessdata
tesseract.path = /opt/homebrew/bin/tesseract

#
# Actuator Endpoints
#
management.endpoints.web.exposure.include = health,info,metrics
management.endpoint.health.show-details = always
management.endpoint.health.show-components = always

#
# Logging Configuration
#
logging.level.org.springframework.web=DEBUG
logging.level.com.textify.worker=DEBUG
logging.level.com.google.cloud=DEBUG
logging.file.name = logs/worker-service.log